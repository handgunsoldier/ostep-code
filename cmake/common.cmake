INCLUDE(CheckSymbolExists)
INCLUDE(CheckCSourceCompiles)
INCLUDE(CheckCXXSourceCompiles)

MACRO(BASE_INFO MSG)
    MESSAGE(${MSG})
ENDMACRO()

MACRO(BASE_MESSAGE MSG)
    MESSAGE(STATUS ${MSG})
ENDMACRO()

MACRO(BASE_ERROR MSG)
    MESSAGE(FATAL_ERROR ${MSG})
ENDMACRO()

MACRO(BASE_PRINT_VARIABLE VAR)
    BASE_INFO("${VAR} = ${${VAR}}")
ENDMACRO()

MACRO(BASE_PRINT_ALL_VARIABLES MODE)
    BASE_INFO(STATUS "PRINT_${MODE}_VARIABLES ------------------------------------------{")
    GET_CMAKE_PROPERTY(VARIABLE_NAMES VARIABLES)
    FOREACH (VARIABLE_NAME ${VARIABLE_NAMES})
        IF (${MODE} STREQUAL "VALID" AND ${VARIABLE_NAME})
            BASE_PRINT_VARIABLE(${VARIABLE_NAME})
        ELSEIF (${MODE} STREQUAL "INVALID" AND NOT ${VARIABLE_NAME})
            BASE_PRINT_VARIABLE(${VARIABLE_NAME})
        ELSEIF (NOT ${MODE} STREQUAL "VALID" AND NOT ${MODE} STREQUAL "INVALID")
            BASE_PRINT_VARIABLE(${VARIABLE_NAME})
        ENDIF ()
    ENDFOREACH ()
    BASE_MESSAGE("PRINT_${MODE}_VARIABLES ------------------------------------------}")
ENDMACRO()

MACRO(BASE_SET_BUILD_TYPE_DEFAULT_DEBUG)
    IF (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
        BASE_MESSAGE("Setting build type to 'Debug' as none was specIFied.")
        SET(CMAKE_BUILD_TYPE Debug)
    ENDIF ()
ENDMACRO()

MACRO(BASE_GET_BUILD_TYPE)
    IF (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
        add_definitions("-DDEBUG")
        add_definitions("-DLOG_OCV")
        BASE_PRINT_VARIABLE("CMAKE_C_FLAGS_DEBUG")
        BASE_PRINT_VARIABLE("CMAKE_CXX_FLAGS_DEBUG")
        #        BASE_PRINT_ALL_VARIABLES(VALID)
    ELSEIF (${CMAKE_BUILD_TYPE} STREQUAL "Release")
        BASE_PRINT_VARIABLE("CMAKE_C_FLAGS_RELEASE")
        BASE_PRINT_VARIABLE("CMAKE_CXX_FLAGS_RELEASE")
    ELSEIF (${CMAKE_BUILD_TYPE} STREQUAL "RelWithDebInfo")
        BASE_PRINT_VARIABLE("CMAKE_C_FLAGS_RELWITHDEBINFO")
        BASE_PRINT_VARIABLE("CMAKE_CXX_FLAGS_RELWITHDEBINFO")
    ELSEIF (${CMAKE_BUILD_TYPE} STREQUAL "MinSizeRel")
        BASE_PRINT_VARIABLE("CMAKE_C_FLAGS_MINSIZEREL")
        BASE_PRINT_VARIABLE("CMAKE_CXX_FLAGS_MINSIZEREL")
    ENDIF ()
ENDMACRO()

MACRO(BASE_GET_HEADERS DIR HEADERS)
    FILE(GLOB _tmp_h "${DIR}/*.h")
    SET(${HEADERS} ${_tmp_h})
ENDMACRO()

MACRO(BASE_GET_SOURCES DIR SOURCES)
    FILE(GLOB _tmp_c "${DIR}/*.c")
    FILE(GLOB _tmp_cxx "${DIR}/*.cpp")
    SET(${SOURCES} "${_tmp_c};${_tmp_cxx}")
ENDMACRO()

MACRO(BASE_GET_ALL_SOURCES DIR SOURCES)
    FILE(GLOB _tmp_h "${DIR}/*.h")
    FILE(GLOB _tmp_cxx "${DIR}/*.cpp")
    SET(${SOURCES} "${_tmp_h};${_tmp_c};${_tmp_cxx}")
ENDMACRO()

MACRO(BASE_GET_SUBDIRS DIR SUBDIRS)
    FILE(GLOB _tmp "${DIR}/*")
    SET(_subdirs "")
    FOREACH (_file ${_tmp})
        IF (IS_DIRECTORY ${_file})
            SET(_subdirs "${_subdirs};${_file}")
        ENDIF ()
    ENDFOREACH ()
    SET(${SUBDIRS} ${_subdirs})
ENDMACRO()

MACRO(BASE_CMAKE_ENTER)
    SET(_tmp ${CMAKE_CURRENT_LIST_DIR}/CMakeLists.txt)
    IF (NOT _tmp STREQUAL CMAKE_CURRENT_LIST_FILE)
        BREAK()
    ENDIF ()
    LIST(FIND _CMAKE_DEEP_LIST ${CMAKE_CURRENT_LIST_DIR} _index)
    IF (_index GREATER -1)
        BASE_ERROR("The BASE_CMAKE_ENTER() is called repeatedly.(${CMAKE_CURRENT_LIST_FILE})")
    ENDIF ()
    IF (${CMAKE_CURRENT_LIST_FILE}_DEEP)
        BASE_ERROR("The CMake File is called repeatedly.(${CMAKE_CURRENT_LIST_FILE}")
    ENDIF ()
    BASE_MESSAGE("CAMKE ENTER : ${CMAKE_CURRENT_LIST_FILE}")
    MATH(EXPR _CMAKE_DEEP "${_CMAKE_DEEP} + 1")
    SET(${CMAKE_CURRENT_LIST_FILE}_DEEP ON)
    LIST(INSERT _CMAKE_DEEP_LIST 0 ${CMAKE_CURRENT_LIST_DIR})
ENDMACRO()

MACRO(BASE_CMAKE_LEAVE)
    SET(_tmp ${CMAKE_CURRENT_LIST_DIR}/CMakeLists.txt)
    IF (NOT _tmp STREQUAL CMAKE_CURRENT_LIST_FILE)
        BREAK()
    ENDIF ()
    LIST(FIND _CMAKE_DEEP_LIST ${CMAKE_CURRENT_LIST_DIR} _index)
    IF (_index EQUAL -1)
        IF (${CMAKE_CURRENT_LIST_FILE}_DEEP)
            BASE_ERROR("The BASE_CMAKE_LEAVE() is called repeatedly.(${CMAKE_CURRENT_LIST_FILE})")
        ELSE ()
            BASE_ERROR("The BASE_CMAKE_ENTER() must be the first called by an CMake File.(${CMAKE_CURRENT_LIST_FILE})")
        ENDIF ()
    ENDIF ()
    IF (_index GREATER 0)
        LIST(GET _CMAKE_DEEP_LIST 0 _tmp)
        BASE_ERROR("The BASE_CMAKE_LEAVE() has not been called in the end of CMake File.(${_tmp})")
    ENDIF ()
    BASE_MESSAGE("CMAKE LEAVE : ${CMAKE_CURRENT_LIST_FILE}")
    LIST(REMOVE_AT _CMAKE_DEEP_LIST 0)
    MATH(EXPR _CMAKE_DEEP "${_CMAKE_DEEP} - 1")
ENDMACRO()

MACRO(BASE_ADD_SUBDIRECTORY DIR)
    BASE_GET_SUBDIRS(${DIR} BASE_SUBDIRS)
    FOREACH (_base ${BASE_SUBDIRS})
        SET(_tmp "${_base}/CMakeLists.txt")
        IF (EXISTS ${_tmp})
            ADD_SUBDIRECTORY(${_base})
        ELSE ()
            MESSAGE("NO CMakeLists.txt exists in ${_base}.")
        ENDIF ()
    ENDFOREACH ()
ENDMACRO()

MACRO(BASE_ADD_SUBSOURCES)
    BASE_GET_SOURCES(${CMAKE_CURRENT_SOURCE_DIR} BASE_SUBSRCS)
    GET_FILENAME_COMPONENT(_namespace ${CMAKE_CURRENT_LIST_DIR} NAME)
    FOREACH (_base ${BASE_SUBSRCS})
        GET_FILENAME_COMPONENT(_temp ${_base} NAME_WE)
        ADD_EXECUTABLE(${_namespace}_${_temp} ${_base})
    ENDFOREACH ()
ENDMACRO()